{"version":3,"file":"static/js/654.87ac49e0.chunk.js","mappings":"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","sources":["components/SearchMovieList/MoviesList.styled.js","components/SearchForm/MoviesSearchForm.styled.js","components/SearchForm/MovieSearchForm.js","components/SearchMovieList/MovieList.js","pages/Movies.js","services/api.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Movies = styled.ul`\n  display: flex;\n  flex-direction: column;\n  align-items: left;\n  justify-content: start;\n`;\n\nexport const MoviesItem = styled.li`\n  list-style: none;\n`;\n\nexport const MovieCard = styled.div`\n  margin-left: 20px;\n  margin-right: 20px;\n  border-radius: 25px;\n  display: flex;\n  justify-content: start;\n  max-height: 500px;\n  gap: 40px;\n`;\n\nexport const MovieInfo = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n`;\n\nexport const MainInfo = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const AddInfo = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const AddList = styled.div`\n  display: flex;\n  gap: 20px;\n`;\n\nexport const ReviewList = styled.ul`\n  margin-top: 40px;\n  list-style: none;\n`;\n","import styled from 'styled-components';\n\n// export const MoviesTitle = styled.h2`\n//   margin-left: 20px;\n//   font-size: 30px;\n//   color: goldenrod;\n//   text-align: center;\n// `;\n\nexport const SearchForm = styled.form`\n  display: flex;\n  align-items: center;\n  justify-content: start;\n  font-size: 15px;\n`;\n\nexport const SearchButton = styled.button`\n  padding: 10px;\n  color: lavender;\n  background: linear-gradient(to bottom, #192bec, #caff00);\n  border-radius: 25px;\n  border: none;\n  font: inherit;\n  cursor: pointer;\n`;\n\nexport const SearchInput = styled.input`\n  padding: 10px;\n  color: chocolate;\n  background-color: lavender;\n  border-radius: 25px;\n  border: 1px solid khaki;\n  font: inherit;\n  font-style: italic;\n  margin-right: 10px;\n  margin-left: 20px;\n  &:focus {\n    color: blueviolet;\n    outline: none;\n  }\n`;\n","import React, { useState } from 'react';\nimport {\n  SearchButton,\n  SearchForm,\n  SearchInput,\n} from './MoviesSearchForm.styled';\n\nconst MovieSearch = ({ onSubmit }) => {\n  const [search, setSearch] = useState('');\n\n  const handleSearch = e => {\n    setSearch(e.target.value.toLowerCase());\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const searchInput = search.toLowerCase();\n    if (searchInput === '') {\n      alert('enter your query');\n      return;\n    }\n    onSubmit(searchInput);\n    setSearch('');\n  };\n\n  return (\n    <SearchForm onSubmit={handleSubmit}>\n      <SearchInput\n        type=\"text\"\n        name=\"search\"\n        value={search}\n        autoComplete=\"off\"\n        autoFocus\n        placeholder=\"Enter movie title\"\n        onChange={handleSearch}\n      />\n      <SearchButton type=\"submit\">\n        <span>Search</span>\n      </SearchButton>\n    </SearchForm>\n  );\n};\n\nexport default MovieSearch;\n","import { Movies, MoviesItem } from './MoviesList.styled';\nimport { Link, useLocation } from 'react-router-dom';\n\nconst MovieList = ({ movies }) => {\n  const location = useLocation();\n  return (\n    <>\n      <Movies>\n        {movies.map(movie => (\n          <MoviesItem key={movie.id}>\n            <Link to={`${movie.id}`} state={{ from: location }}>\n              <h2>{movie.title}</h2>\n            </Link>\n          </MoviesItem>\n        ))}\n      </Movies>\n    </>\n  );\n};\n\nexport default MovieList;\n","import MovieSearch from 'components/SearchForm/MovieSearchForm';\nimport React, { useState, useEffect } from 'react';\nimport api from '../services/api';\nimport MovieList from '../components/SearchMovieList/MovieList';\nimport { useSearchParams } from 'react-router-dom';\n\nconst Movies = () => {\n  const [movies, setMovies] = useState([]);\n  const [error, setError] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const query = searchParams.get('query');\n\n  useEffect(() => {\n    async function findMovies(query) {\n      if (!query) {\n        return;\n      }\n\n      setIsLoading(true);\n      try {\n        const movies = await api.fetchMoviesByName(query);\n\n        if (movies.total_results === 0) {\n          setError('Nothing was found, try again');\n          return;\n        }\n\n        setMovies(movies.results);\n        setError('');\n      } catch (error) {\n        setError('Houston, we have a problem:) try to reload the page');\n      } finally {\n        setIsLoading(false);\n      }\n    }\n    findMovies(query);\n  }, [query]);\n\n  const handleFormSubmit = newQuery => {\n    setSearchParams({ query: newQuery });\n  };\n\n  return (\n    <main>\n      {movies && (\n        <>\n          <MovieSearch onSubmit={handleFormSubmit} />\n          <div>\n            {error && <p>{error}</p>}\n            {isLoading && <p>Loading...</p>}\n\n            {movies.length > 0 && <MovieList movies={movies} />}\n          </div>\n        </>\n      )}\n    </main>\n  );\n};\n\nexport default Movies;\n","import axios from 'axios';\n\nconst key = 'b84ac87767a32f4b7dddc0cfcc03fc4c';\n\nasync function fetchHomepageMovies() {\n  try {\n    const response = await axios.get(\n      `https://api.themoviedb.org/3/trending/movie/day?api_key=${key}&language=en-US&page=1`\n    );\n    if (!response) {\n      throw new Error(\"Sorry, something wrong's happened\");\n    }\n    return response.data.results;\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nconst fetchMoviesByName = async (query, page) => {\n  try {\n    const response = await axios.get(\n      `https://api.themoviedb.org/3/search/movie?api_key=${key}&language=en-US&query=${query}&page=${page}`\n    );\n    if (!response) {\n      throw new Error(\"Sorry, something wrong's happened\");\n    }\n    return response.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nconst fetchMoviesById = async movieId => {\n  try {\n    const response = await axios.get(\n      `https://api.themoviedb.org/3/movie/${movieId}?api_key=${key}`\n    );\n    if (!response) {\n      throw new Error(\"Sorry, something wrong's happened\");\n    }\n    return response.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\n// fetchCast\nconst fetchCast = async id => {\n  try {\n    const response = await axios.get(\n      `https://api.themoviedb.org/3/movie/${id}/credits?api_key=${key}&language=en-US`\n    );\n    if (!response) {\n      throw new Error(\"Sorry, something wrong's happened\");\n    }\n    return response.data.cast;\n  } catch (error) {\n    console.error(error);\n  }\n};\n\n// fetchReview\nconst fetchReview = async id => {\n  try {\n    const response = await axios.get(\n      `https://api.themoviedb.org/3/movie/${id}/reviews?api_key=${key}&language=en-US&page=1`\n    );\n    if (!response) {\n      throw new Error(\"Sorry, something wrong's happened\");\n    }\n    return response.data.results;\n  } catch (error) {\n    console.error(error);\n  }\n};\n\nconst api = {\n  fetchHomepageMovies,\n  fetchMoviesById,\n  fetchMoviesByName,\n  fetchReview,\n  fetchCast,\n};\n\nexport default api;\n"],"names":["Movies","styled","MoviesItem","MovieCard","MovieInfo","MainInfo","AddInfo","AddList","ReviewList","SearchForm","SearchButton","SearchInput","onSubmit","useState","search","setSearch","e","preventDefault","searchInput","toLowerCase","alert","type","name","value","autoComplete","autoFocus","placeholder","onChange","target","movies","location","useLocation","map","movie","to","id","state","from","title","setMovies","error","setError","isLoading","setIsLoading","useSearchParams","searchParams","setSearchParams","query","get","useEffect","api","total_results","results","findMovies","newQuery","length","key","fetchHomepageMovies","axios","response","Error","data","console","log","fetchMoviesByName","page","fetchMoviesById","movieId","fetchCast","cast","fetchReview"],"sourceRoot":""}