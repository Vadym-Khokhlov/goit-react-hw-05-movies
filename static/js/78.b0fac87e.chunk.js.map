{"version":3,"file":"static/js/78.b0fac87e.chunk.js","mappings":"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","sources":["components/BackLink.js","pages/MovieDetails.js","services/api.js"],"sourcesContent":["import { HiArrowLeft } from 'react-icons/hi';\nimport { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nconst StyledLink = styled(Link)`\n  display: inline-flex;\n  align-items: center;\n  gap: 4px;\n  padding: 8px 0;\n  color: black;\n  text-decoration: none;\n  font-weight: 500;\n  text-transform: uppercase;\n\n  :hover {\n    color: orangered;\n  }\n`;\n\nexport const BackLink = ({ to, children }) => {\n  return (\n    <StyledLink to={to}>\n      <HiArrowLeft size=\"24\" />\n      {children}\n    </StyledLink>\n  );\n};\n","import { useParams, useLocation, Link, Outlet } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport { BackLink } from '../components/BackLink';\nimport { Suspense } from 'react';\nimport api from 'services/api';\n\nconst MovieDetails = () => {\n  const [movie, setMovie] = useState([]);\n  const [error, setError] = useState('');\n\n  const { movieId } = useParams();\n  const location = useLocation();\n\n  useEffect(() => {\n    async function getMoviesById() {\n      try {\n        const movie = await api.fetchMoviesById(Number(movieId));\n        setMovie(movie);\n      } catch (error) {\n        setError(error);\n      }\n    }\n    getMoviesById();\n  }, [movieId]);\n\n  const { id, name, poster_path, title, overview, genres } = movie;\n  const backLinkHref = location.state?.from ?? '/';\n\n  if (!movie) {\n    return;\n  }\n\n  return (\n    <main>\n      {error ? (\n        <p>{error}</p>\n      ) : (\n        <>\n          <BackLink to={backLinkHref}>Back to movies</BackLink>\n          <div key={id}>\n            <img\n              src={`https://image.tmdb.org/t/p/w300${poster_path}`}\n              alt={name}\n            />\n            <h2>{title}</h2>\n            <h2>Genres:</h2>\n            <ul>\n              {genres &&\n                genres.map(genre => <li key={genre.id}>{genre.name}</li>)}\n            </ul>\n            <p>{overview}</p>\n          </div>\n          <div>\n            <Link to=\"cast\">Cast</Link>\n            <Link to=\"review\">Review</Link>\n            <Suspense fallback={<div>Loading subpage...</div>}>\n              <Outlet />\n            </Suspense>\n          </div>\n        </>\n      )}\n    </main>\n  );\n};\n\nexport default MovieDetails;\n","import axios from 'axios';\n\nconst key = 'b84ac87767a32f4b7dddc0cfcc03fc4c';\n\nasync function fetchHomepageMovies() {\n  try {\n    const response = await axios.get(\n      `https://api.themoviedb.org/3/trending/movie/day?api_key=${key}&language=en-US&page=1`\n    );\n    if (!response) {\n      throw new Error(\"Sorry, something wrong's happened\");\n    }\n    return response.data.results;\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nconst fetchMoviesByName = async (query, page) => {\n  try {\n    const response = await axios.get(\n      `https://api.themoviedb.org/3/search/movie?api_key=${key}&language=en-US&query=${query}&page=${page}`\n    );\n    if (!response) {\n      throw new Error(\"Sorry, something wrong's happened\");\n    }\n    return response.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nconst fetchMoviesById = async movieId => {\n  try {\n    const response = await axios.get(\n      `https://api.themoviedb.org/3/movie/${movieId}?api_key=${key}`\n    );\n    if (!response) {\n      throw new Error(\"Sorry, something wrong's happened\");\n    }\n    return response.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\n// fetchCast\nconst fetchCast = async id => {\n  try {\n    const response = await axios.get(\n      `https://api.themoviedb.org/3/movie/${id}/credits?api_key=${key}&language=en-US`\n    );\n    if (!response) {\n      throw new Error(\"Sorry, something wrong's happened\");\n    }\n    return response.data.cast;\n  } catch (error) {\n    console.error(error);\n  }\n};\n\n// fetchReview\nconst fetchReview = async id => {\n  try {\n    const response = await axios.get(\n      `https://api.themoviedb.org/3/movie/${id}/reviews?api_key=${key}&language=en-US&page=1`\n    );\n    if (!response) {\n      throw new Error(\"Sorry, something wrong's happened\");\n    }\n    return response.data.results;\n  } catch (error) {\n    console.error(error);\n  }\n};\n\nconst api = {\n  fetchHomepageMovies,\n  fetchMoviesById,\n  fetchMoviesByName,\n  fetchReview,\n  fetchCast,\n};\n\nexport default api;\n"],"names":["StyledLink","styled","Link","BackLink","to","children","size","useState","movie","setMovie","error","setError","movieId","useParams","location","useLocation","useEffect","api","Number","getMoviesById","id","name","poster_path","title","overview","genres","backLinkHref","state","from","src","alt","map","genre","Suspense","fallback","key","fetchHomepageMovies","axios","response","Error","data","results","console","log","fetchMoviesByName","query","page","fetchMoviesById","fetchCast","cast","fetchReview"],"sourceRoot":""}