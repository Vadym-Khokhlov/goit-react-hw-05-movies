{"version":3,"file":"static/js/953.932f1fc7.chunk.js","mappings":"8RAEaA,EAAcC,EAAAA,GAAAA,GAAH,gEAKXC,EAAWD,EAAAA,GAAAA,EAAH,6F,SCiCrB,EAlCe,WACb,OAA4BE,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAcR,OAZAE,EAAAA,EAAAA,YAAU,WAAM,wCACd,6GAEyBC,EAAAA,EAAAA,YAAgBC,OAAOJ,IAFhD,OAEUF,EAFV,OAGIC,EAAUD,GAHd,gDAKIO,QAAQC,IAAR,MALJ,0DADc,uBAAC,WAAD,wBASdC,EACD,GAAE,CAACP,KAGF,gCACE,UAACN,EAAD,sBAAsBI,EAAOU,OAA7B,SACA,SAAC,KAAD,UACGV,EAAOU,OAAS,EACfV,EAAOW,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,OAAQC,EAAf,EAAeA,QAAf,OACT,2BACE,SAAChB,EAAD,UAAWe,KACX,uBAAIC,MAFGF,EADA,KAOX,yDAKT,C,uQCrCYG,EAASlB,EAAAA,GAAAA,GAAH,sHAONmB,EAAanB,EAAAA,GAAAA,GAAH,6CAIVoB,EAAYpB,EAAAA,GAAAA,IAAH,+LAWTqB,EAAYrB,EAAAA,GAAAA,IAAH,wGAMTsB,EAAWtB,EAAAA,GAAAA,IAAH,qEAKRuB,EAAUvB,EAAAA,GAAAA,IAAH,qEAKPwB,EAAUxB,EAAAA,GAAAA,IAAH,wDAKPyB,EAAazB,EAAAA,GAAAA,GAAH,iE,kEC3CjB0B,EAAM,mCAEGC,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,6GAE2BC,EAAAA,EAAAA,IAAA,kEACsCF,EADtC,2BAF3B,UAEUG,EAFV,6BAMY,IAAIC,MAAM,qCANtB,gCAQWD,EAASE,KAAKC,SARzB,gCAUItB,QAAQC,IAAR,MAVJ,gFAcA,IAAMsB,EAAiB,mCAAG,WAAOC,EAAOC,GAAd,gGAECP,EAAAA,EAAAA,IAAA,4DACgCF,EADhC,iCAC4DQ,EAD5D,iBAC0EC,IAH3E,UAEhBN,EAFgB,6BAMd,IAAIC,MAAM,qCANI,gCAQfD,EAASE,MARM,gCAUtBrB,QAAQC,IAAR,MAVsB,yDAAH,wDAcjByB,EAAe,mCAAG,WAAM/B,GAAN,gGAEGuB,EAAAA,EAAAA,IAAA,6CACiBvB,EADjB,oBACoCqB,IAHvC,UAEdG,EAFc,6BAMZ,IAAIC,MAAM,qCANE,gCAQbD,EAASE,MARI,gCAUpBrB,QAAQC,IAAR,MAVoB,yDAAH,sDAef0B,EAAS,mCAAG,WAAMtB,GAAN,gGAESa,EAAAA,EAAAA,IAAA,6CACiBb,EADjB,4BACuCW,EADvC,oBAFT,UAERG,EAFQ,6BAMN,IAAIC,MAAM,qCANJ,gCAQPD,EAASE,KAAKO,MARP,gCAUd5B,QAAQ6B,MAAR,MAVc,yDAAH,sDAeTC,EAAW,mCAAG,WAAMzB,GAAN,gGAEOa,EAAAA,EAAAA,IAAA,6CACiBb,EADjB,4BACuCW,EADvC,2BAFP,UAEVG,EAFU,6BAMR,IAAIC,MAAM,qCANF,gCAQTD,EAASE,KAAKC,SARL,gCAUhBtB,QAAQ6B,MAAR,MAVgB,yDAAH,sDAcX/B,EAAM,CACVmB,oBA3EF,WAEeA,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,EA0EbS,gBAAAA,EACAH,kBAAAA,EACAO,YAAAA,EACAH,UAAAA,GAGF,K","sources":["components/Review/Review.styled.js","components/Review/Review.js","components/SearchMovieList/MoviesList.styled.js","services/api.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const ReviewTitle = styled.h2`\n  margin-left: 20px;\n  color: silver;\n`;\n\nexport const Reviewer = styled.p`\n  color: rebeccapurple;\n  font-size: large;\n  font-style: italic;\n`;\n","import api from 'services/api';\nimport { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { ReviewList } from 'components/SearchMovieList/MoviesList.styled';\nimport { Reviewer, ReviewTitle } from './Review.styled';\n\nconst Review = () => {\n  const [review, setReview] = useState([]);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    async function getReview() {\n      try {\n        const review = await api.fetchReview(Number(movieId));\n        setReview(review);\n      } catch (error) {\n        console.log(error);\n      }\n    }\n    getReview();\n  }, [movieId]);\n\n  return (\n    <section>\n      <ReviewTitle>Reviews({review.length}):</ReviewTitle>\n      <ReviewList>\n        {review.length > 0 ? (\n          review.map(({ id, author, content }) => (\n            <li key={id}>\n              <Reviewer>{author}</Reviewer>\n              <p>{content}</p>\n            </li>\n          ))\n        ) : (\n          <p>This movie has no reviews</p>\n        )}\n      </ReviewList>\n    </section>\n  );\n};\nexport default Review;\n","import styled from 'styled-components';\n\nexport const Movies = styled.ul`\n  display: flex;\n  flex-direction: column;\n  align-items: left;\n  justify-content: start;\n`;\n\nexport const MoviesItem = styled.li`\n  list-style: none;\n`;\n\nexport const MovieCard = styled.div`\n  margin-left: 20px;\n  margin-right: 20px;\n  border-radius: 25px;\n  display: flex;\n  justify-content: start;\n  height: auto;\n  max-width: 1000px;\n  gap: 40px;\n`;\n\nexport const MovieInfo = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n`;\n\nexport const MainInfo = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const AddInfo = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const AddList = styled.div`\n  display: flex;\n  gap: 20px;\n`;\n\nexport const ReviewList = styled.ul`\n  margin-top: 40px;\n  list-style: none;\n`;\n","import axios from 'axios';\n\nconst key = 'b84ac87767a32f4b7dddc0cfcc03fc4c';\n\nasync function fetchHomepageMovies() {\n  try {\n    const response = await axios.get(\n      `https://api.themoviedb.org/3/trending/movie/day?api_key=${key}&language=en-US&page=1`\n    );\n    if (!response) {\n      throw new Error(\"Sorry, something wrong's happened\");\n    }\n    return response.data.results;\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nconst fetchMoviesByName = async (query, page) => {\n  try {\n    const response = await axios.get(\n      `https://api.themoviedb.org/3/search/movie?api_key=${key}&language=en-US&query=${query}&page=${page}`\n    );\n    if (!response) {\n      throw new Error(\"Sorry, something wrong's happened\");\n    }\n    return response.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nconst fetchMoviesById = async movieId => {\n  try {\n    const response = await axios.get(\n      `https://api.themoviedb.org/3/movie/${movieId}?api_key=${key}`\n    );\n    if (!response) {\n      throw new Error(\"Sorry, something wrong's happened\");\n    }\n    return response.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\n// fetchCast\nconst fetchCast = async id => {\n  try {\n    const response = await axios.get(\n      `https://api.themoviedb.org/3/movie/${id}/credits?api_key=${key}&language=en-US`\n    );\n    if (!response) {\n      throw new Error(\"Sorry, something wrong's happened\");\n    }\n    return response.data.cast;\n  } catch (error) {\n    console.error(error);\n  }\n};\n\n// fetchReview\nconst fetchReview = async id => {\n  try {\n    const response = await axios.get(\n      `https://api.themoviedb.org/3/movie/${id}/reviews?api_key=${key}&language=en-US&page=1`\n    );\n    if (!response) {\n      throw new Error(\"Sorry, something wrong's happened\");\n    }\n    return response.data.results;\n  } catch (error) {\n    console.error(error);\n  }\n};\n\nconst api = {\n  fetchHomepageMovies,\n  fetchMoviesById,\n  fetchMoviesByName,\n  fetchReview,\n  fetchCast,\n};\n\nexport default api;\n"],"names":["ReviewTitle","styled","Reviewer","useState","review","setReview","movieId","useParams","useEffect","api","Number","console","log","getReview","length","map","id","author","content","Movies","MoviesItem","MovieCard","MovieInfo","MainInfo","AddInfo","AddList","ReviewList","key","fetchHomepageMovies","axios","response","Error","data","results","fetchMoviesByName","query","page","fetchMoviesById","fetchCast","cast","error","fetchReview"],"sourceRoot":""}