{"version":3,"file":"static/js/465.686a1f07.chunk.js","mappings":"yNAoCA,UAhCe,WACb,OAA4BA,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAcR,OAZAE,EAAAA,EAAAA,YAAU,WAAM,wCACd,6GAEyBC,EAAAA,EAAAA,YAAgBC,OAAOJ,IAFhD,OAEUF,EAFV,OAGIC,EAAUD,GAHd,gDAKIO,QAAQC,IAAR,MALJ,0DADc,uBAAC,WAAD,wBASdC,EACD,GAAE,CAACP,KAGF,wCAEGF,EAAOU,OAAS,EACfV,EAAOW,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,OAAQC,EAAf,EAAeA,QAAf,OACT,2BACE,uBAAID,KACJ,uBAAIC,MAFGF,EADA,KAOX,uDAIP,C,8DCjCKG,EAAM,mCAEGC,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,6GAE2BC,EAAAA,EAAAA,IAAA,kEACsCF,EADtC,2BAF3B,UAEUG,EAFV,6BAMY,IAAIC,MAAM,qCANtB,gCAQWD,EAASE,KAAKC,SARzB,gCAUId,QAAQC,IAAR,MAVJ,gFAcA,IAAMc,EAAiB,mCAAG,WAAOC,EAAOC,GAAd,gGAECP,EAAAA,EAAAA,IAAA,4DACgCF,EADhC,iCAC4DQ,EAD5D,iBAC0EC,IAH3E,UAEhBN,EAFgB,6BAMd,IAAIC,MAAM,qCANI,gCAQfD,EAASE,MARM,gCAUtBb,QAAQC,IAAR,MAVsB,yDAAH,wDAcjBiB,EAAe,mCAAG,WAAMvB,GAAN,gGAEGe,EAAAA,EAAAA,IAAA,6CACiBf,EADjB,oBACoCa,IAHvC,UAEdG,EAFc,6BAMZ,IAAIC,MAAM,qCANE,gCAQbD,EAASE,MARI,gCAUpBb,QAAQC,IAAR,MAVoB,yDAAH,sDAefkB,EAAS,mCAAG,WAAMd,GAAN,gGAESK,EAAAA,EAAAA,IAAA,6CACiBL,EADjB,4BACuCG,EADvC,oBAFT,UAERG,EAFQ,6BAMN,IAAIC,MAAM,qCANJ,gCAQPD,EAASE,KAAKO,MARP,gCAUdpB,QAAQqB,MAAR,MAVc,yDAAH,sDAeTC,EAAW,mCAAG,WAAMjB,GAAN,gGAEOK,EAAAA,EAAAA,IAAA,6CACiBL,EADjB,4BACuCG,EADvC,2BAFP,UAEVG,EAFU,6BAMR,IAAIC,MAAM,qCANF,gCAQTD,EAASE,KAAKC,SARL,gCAUhBd,QAAQqB,MAAR,MAVgB,yDAAH,sDAcXvB,EAAM,CACVW,oBA3EF,WAEeA,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,EA0EbS,gBAAAA,EACAH,kBAAAA,EACAO,YAAAA,EACAH,UAAAA,GAGF,K","sources":["pages/Review.js","services/api.js"],"sourcesContent":["import api from 'services/api';\nimport { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\n\nconst Review = () => {\n  const [review, setReview] = useState([]);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    async function getReview() {\n      try {\n        const review = await api.fetchReview(Number(movieId));\n        setReview(review);\n      } catch (error) {\n        console.log(error);\n      }\n    }\n    getReview();\n  }, [movieId]);\n\n  return (\n    <section>\n      Review\n      {review.length > 0 ? (\n        review.map(({ id, author, content }) => (\n          <li key={id}>\n            <p>{author}</p>\n            <p>{content}</p>\n          </li>\n        ))\n      ) : (\n        <p>This movie has no reviews</p>\n      )}\n    </section>\n  );\n};\nexport default Review;\n","import axios from 'axios';\n\nconst key = 'b84ac87767a32f4b7dddc0cfcc03fc4c';\n\nasync function fetchHomepageMovies() {\n  try {\n    const response = await axios.get(\n      `https://api.themoviedb.org/3/trending/movie/day?api_key=${key}&language=en-US&page=1`\n    );\n    if (!response) {\n      throw new Error(\"Sorry, something wrong's happened\");\n    }\n    return response.data.results;\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nconst fetchMoviesByName = async (query, page) => {\n  try {\n    const response = await axios.get(\n      `https://api.themoviedb.org/3/search/movie?api_key=${key}&language=en-US&query=${query}&page=${page}`\n    );\n    if (!response) {\n      throw new Error(\"Sorry, something wrong's happened\");\n    }\n    return response.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nconst fetchMoviesById = async movieId => {\n  try {\n    const response = await axios.get(\n      `https://api.themoviedb.org/3/movie/${movieId}?api_key=${key}`\n    );\n    if (!response) {\n      throw new Error(\"Sorry, something wrong's happened\");\n    }\n    return response.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\n// fetchCast\nconst fetchCast = async id => {\n  try {\n    const response = await axios.get(\n      `https://api.themoviedb.org/3/movie/${id}/credits?api_key=${key}&language=en-US`\n    );\n    if (!response) {\n      throw new Error(\"Sorry, something wrong's happened\");\n    }\n    return response.data.cast;\n  } catch (error) {\n    console.error(error);\n  }\n};\n\n// fetchReview\nconst fetchReview = async id => {\n  try {\n    const response = await axios.get(\n      `https://api.themoviedb.org/3/movie/${id}/reviews?api_key=${key}&language=en-US&page=1`\n    );\n    if (!response) {\n      throw new Error(\"Sorry, something wrong's happened\");\n    }\n    return response.data.results;\n  } catch (error) {\n    console.error(error);\n  }\n};\n\nconst api = {\n  fetchHomepageMovies,\n  fetchMoviesById,\n  fetchMoviesByName,\n  fetchReview,\n  fetchCast,\n};\n\nexport default api;\n"],"names":["useState","review","setReview","movieId","useParams","useEffect","api","Number","console","log","getReview","length","map","id","author","content","key","fetchHomepageMovies","axios","response","Error","data","results","fetchMoviesByName","query","page","fetchMoviesById","fetchCast","cast","error","fetchReview"],"sourceRoot":""}