{"version":3,"file":"static/js/951.eb40e485.chunk.js","mappings":"wRAEaA,EAAcC,EAAAA,GAAAA,GAAH,kFAMXC,EAAeD,EAAAA,GAAAA,GAAH,qJASZE,EAAeF,EAAAA,GAAAA,IAAH,iIAQZG,EAAaH,EAAAA,GAAAA,EAAH,+C,mBCiCvB,MA/CA,WACE,OAAsCI,EAAAA,EAAAA,UAAS,IAA/C,eAAOC,EAAP,KAAuBC,EAAvB,KACA,GAA0BF,EAAAA,EAAAA,UAAS,IAAnC,eAAOG,EAAP,KAAcC,EAAd,KAcA,OAZAC,EAAAA,EAAAA,YAAU,WAAM,wCACd,6GAE2BC,EAAAA,EAAAA,sBAF3B,OAEUC,EAFV,OAGIL,EAAYK,GAHhB,gDAKIH,EAAS,EAAD,IALZ,0DADc,uBAAC,WAAD,wBASdI,EACD,GAAE,KAGD,8BACGL,GACC,uBAAIA,KAEJ,iCACE,UAACR,EAAD,yBACY,SAAC,MAAD,CAAUc,MAAM,YAG5B,SAACZ,EAAD,UACGI,GACCA,EAAeS,KAAI,SAAAC,GAAK,OACtB,SAACb,EAAD,WACE,UAAC,KAAD,CAAMc,GAAE,iBAAYD,EAAME,IAA1B,WACE,gBACEC,IAAG,yCAAoCH,EAAMI,aAC7CC,IAAKL,EAAMM,SAGb,SAAClB,EAAD,UAAaY,EAAMM,YAPJN,EAAME,GADH,UAiBrC,C,kECtDKK,EAAM,mCAEGC,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,6GAE2BC,EAAAA,EAAAA,IAAA,kEACsCF,EADtC,2BAF3B,UAEUG,EAFV,6BAMY,IAAIC,MAAM,qCANtB,gCAQWD,EAASE,KAAKC,SARzB,gCAUIC,QAAQC,IAAR,MAVJ,gFAcA,IAAMC,EAAiB,mCAAG,WAAOC,EAAOC,GAAd,gGAECT,EAAAA,EAAAA,IAAA,4DACgCF,EADhC,iCAC4DU,EAD5D,iBAC0EC,IAH3E,UAEhBR,EAFgB,6BAMd,IAAIC,MAAM,qCANI,gCAQfD,EAASE,MARM,gCAUtBE,QAAQC,IAAR,MAVsB,yDAAH,wDAcjBI,EAAe,mCAAG,WAAMC,GAAN,gGAEGX,EAAAA,EAAAA,IAAA,6CACiBW,EADjB,oBACoCb,IAHvC,UAEdG,EAFc,6BAMZ,IAAIC,MAAM,qCANE,gCAQbD,EAASE,MARI,gCAUpBE,QAAQC,IAAR,MAVoB,yDAAH,sDAefM,EAAS,mCAAG,WAAMnB,GAAN,gGAESO,EAAAA,EAAAA,IAAA,6CACiBP,EADjB,4BACuCK,EADvC,oBAFT,UAERG,EAFQ,6BAMN,IAAIC,MAAM,qCANJ,gCAQPD,EAASE,KAAKU,MARP,gCAUdR,QAAQtB,MAAR,MAVc,yDAAH,sDAeT+B,EAAW,mCAAG,WAAMrB,GAAN,gGAEOO,EAAAA,EAAAA,IAAA,6CACiBP,EADjB,4BACuCK,EADvC,2BAFP,UAEVG,EAFU,6BAMR,IAAIC,MAAM,qCANF,gCAQTD,EAASE,KAAKC,SARL,gCAUhBC,QAAQtB,MAAR,MAVgB,yDAAH,sDAcXG,EAAM,CACVa,oBA3EF,WAEeA,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,EA0EbW,gBAAAA,EACAH,kBAAAA,EACAO,YAAAA,EACAF,UAAAA,GAGF,K","sources":["components/HomeMoviesList/HomeMoviesList.styled.js","components/HomeMoviesList/HomeMoviesList.js","services/api.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const HomeHeading = styled.h2`\n  text-align: center;\n  color: red;\n  font-size: 30px;\n`;\n\nexport const TrendingList = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  align-items: center;\n  gap: 20px;\n  list-style: none;\n`;\n\nexport const TrendingItem = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 300px;\n  height: 400px;\n`;\n\nexport const MovieTitle = styled.p`\n  text-align: center;\n`;\n","import api from 'services/api';\nimport React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport {\n  HomeHeading,\n  MovieTitle,\n  TrendingItem,\n  TrendingList,\n} from './HomeMoviesList.styled';\nimport { VscFlame } from 'react-icons/vsc';\n\nfunction HomeMovieList() {\n  const [trendingMovies, setTrending] = useState([]);\n  const [error, setError] = useState('');\n\n  useEffect(() => {\n    async function getTrendingMovies() {\n      try {\n        const trending = await api.fetchHomepageMovies();\n        setTrending(trending);\n      } catch (error) {\n        setError(error);\n      }\n    }\n    getTrendingMovies();\n  }, []);\n\n  return (\n    <>\n      {error ? (\n        <p>{error}</p>\n      ) : (\n        <>\n          <HomeHeading>\n            Trending! <VscFlame color=\"red\" />\n          </HomeHeading>\n\n          <TrendingList>\n            {trendingMovies &&\n              trendingMovies.map(movie => (\n                <TrendingItem key={movie.id}>\n                  <Link to={`movies/${movie.id}`}>\n                    <img\n                      src={`https://image.tmdb.org/t/p/w200${movie.poster_path}`}\n                      alt={movie.title}\n                    />\n\n                    <MovieTitle>{movie.title}</MovieTitle>\n                  </Link>\n                </TrendingItem>\n              ))}\n          </TrendingList>\n        </>\n      )}\n    </>\n  );\n}\n\nexport default HomeMovieList;\n","import axios from 'axios';\n\nconst key = 'b84ac87767a32f4b7dddc0cfcc03fc4c';\n\nasync function fetchHomepageMovies() {\n  try {\n    const response = await axios.get(\n      `https://api.themoviedb.org/3/trending/movie/day?api_key=${key}&language=en-US&page=1`\n    );\n    if (!response) {\n      throw new Error(\"Sorry, something wrong's happened\");\n    }\n    return response.data.results;\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nconst fetchMoviesByName = async (query, page) => {\n  try {\n    const response = await axios.get(\n      `https://api.themoviedb.org/3/search/movie?api_key=${key}&language=en-US&query=${query}&page=${page}`\n    );\n    if (!response) {\n      throw new Error(\"Sorry, something wrong's happened\");\n    }\n    return response.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nconst fetchMoviesById = async movieId => {\n  try {\n    const response = await axios.get(\n      `https://api.themoviedb.org/3/movie/${movieId}?api_key=${key}`\n    );\n    if (!response) {\n      throw new Error(\"Sorry, something wrong's happened\");\n    }\n    return response.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\n// fetchCast\nconst fetchCast = async id => {\n  try {\n    const response = await axios.get(\n      `https://api.themoviedb.org/3/movie/${id}/credits?api_key=${key}&language=en-US`\n    );\n    if (!response) {\n      throw new Error(\"Sorry, something wrong's happened\");\n    }\n    return response.data.cast;\n  } catch (error) {\n    console.error(error);\n  }\n};\n\n// fetchReview\nconst fetchReview = async id => {\n  try {\n    const response = await axios.get(\n      `https://api.themoviedb.org/3/movie/${id}/reviews?api_key=${key}&language=en-US&page=1`\n    );\n    if (!response) {\n      throw new Error(\"Sorry, something wrong's happened\");\n    }\n    return response.data.results;\n  } catch (error) {\n    console.error(error);\n  }\n};\n\nconst api = {\n  fetchHomepageMovies,\n  fetchMoviesById,\n  fetchMoviesByName,\n  fetchReview,\n  fetchCast,\n};\n\nexport default api;\n"],"names":["HomeHeading","styled","TrendingList","TrendingItem","MovieTitle","useState","trendingMovies","setTrending","error","setError","useEffect","api","trending","getTrendingMovies","color","map","movie","to","id","src","poster_path","alt","title","key","fetchHomepageMovies","axios","response","Error","data","results","console","log","fetchMoviesByName","query","page","fetchMoviesById","movieId","fetchCast","cast","fetchReview"],"sourceRoot":""}