{"version":3,"file":"static/js/78.efa9d27f.chunk.js","mappings":"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","sources":["components/SearchMovieList/MoviesList.styled.js","components/BackLink.js","pages/MovieDetails.js","services/api.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Movies = styled.ul`\n  display: flex;\n  flex-direction: column;\n  align-items: left;\n  justify-content: start;\n`;\n\nexport const MoviesItem = styled.li`\n  list-style: none;\n`;\n\nexport const MovieCard = styled.div`\n  margin-left: 20px;\n  margin-right: 20px;\n  border-radius: 25px;\n  display: flex;\n  justify-content: start;\n  max-height: 500px;\n  gap: 40px;\n`;\n\nexport const MovieInfo = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n`;\n\nexport const MainInfo = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const AddInfo = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const AddList = styled.div`\n  display: flex;\n  gap: 20px;\n`;\n\nexport const ReviewList = styled.ul`\n  margin-top: 40px;\n  list-style: none;\n`;\n","import { HiArrowLeft } from 'react-icons/hi';\nimport { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nconst StyledLink = styled(Link)`\n  display: inline-flex;\n  align-items: center;\n  margin-left: 20px;\n  gap: 4px;\n  padding: 8px 0;\n  color: black;\n  text-decoration: none;\n  font-weight: 500;\n  text-transform: uppercase;\n\n  :hover {\n    color: orangered;\n  }\n`;\n\nexport const BackLink = ({ to, children }) => {\n  return (\n    <StyledLink to={to}>\n      <HiArrowLeft size=\"24\" />\n      {children}\n    </StyledLink>\n  );\n};\n","import { useParams, useLocation, Link, Outlet } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport { BackLink } from '../components/BackLink';\nimport { Suspense } from 'react';\nimport api from 'services/api';\n// import { ScrollLink } from 'react-scroll';\nimport {\n  AddInfo,\n  AddList,\n  MainInfo,\n  MovieCard,\n  MovieInfo,\n} from 'components/SearchMovieList/MoviesList.styled';\n\nconst MovieDetails = () => {\n  const [movie, setMovie] = useState([]);\n  const [error, setError] = useState('');\n\n  const { movieId } = useParams();\n  const location = useLocation();\n\n  useEffect(() => {\n    async function getMoviesById() {\n      try {\n        const movie = await api.fetchMoviesById(Number(movieId));\n        setMovie(movie);\n      } catch (error) {\n        setError(error);\n      }\n    }\n    getMoviesById();\n  }, [movieId]);\n\n  function RateMovie(vote) {\n    return Math.round(vote * 10);\n  }\n\n  function FormatDateRelease(date) {\n    if (!date) {\n      return;\n    }\n    const parsedDate = Date.parse(date);\n    return new Date(parsedDate).getFullYear();\n  }\n\n  const {\n    id,\n    name,\n    poster_path,\n    title,\n    overview,\n    genres,\n    release_date,\n    vote_average,\n  } = movie;\n  const backLinkHref = location.state?.from ?? '/';\n\n  if (!movie) {\n    return;\n  }\n\n  return (\n    <main>\n      {error ? (\n        <p>{error}</p>\n      ) : (\n        <>\n          <BackLink to={backLinkHref}>Back to movies</BackLink>\n\n          <MovieCard key={id}>\n            <img\n              src={`https://image.tmdb.org/t/p/w300${poster_path}`}\n              alt={name}\n            />\n            <MovieInfo>\n              <MainInfo>\n                <h2>\n                  {title}({FormatDateRelease(release_date)})\n                </h2>\n                <p>Users Score: {RateMovie(vote_average)}% </p>\n                <h3>Overview:</h3>\n                <p>{overview}</p>\n                <h3>Genres:</h3>\n                <ul>\n                  {genres &&\n                    genres.map(genre => <li key={genre.id}>{genre.name}</li>)}\n                </ul>\n              </MainInfo>\n              <AddInfo>\n                <h3> Additional information</h3>\n                <AddList>\n                  <Link to=\"cast\">Cast</Link>\n                  <Link to=\"review\">Review</Link>\n                </AddList>\n              </AddInfo>\n            </MovieInfo>\n          </MovieCard>\n          <Suspense fallback={<div>Loading...</div>}>\n            <Outlet />\n          </Suspense>\n        </>\n      )}\n    </main>\n  );\n};\n\nexport default MovieDetails;\n","import axios from 'axios';\n\nconst key = 'b84ac87767a32f4b7dddc0cfcc03fc4c';\n\nasync function fetchHomepageMovies() {\n  try {\n    const response = await axios.get(\n      `https://api.themoviedb.org/3/trending/movie/day?api_key=${key}&language=en-US&page=1`\n    );\n    if (!response) {\n      throw new Error(\"Sorry, something wrong's happened\");\n    }\n    return response.data.results;\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nconst fetchMoviesByName = async (query, page) => {\n  try {\n    const response = await axios.get(\n      `https://api.themoviedb.org/3/search/movie?api_key=${key}&language=en-US&query=${query}&page=${page}`\n    );\n    if (!response) {\n      throw new Error(\"Sorry, something wrong's happened\");\n    }\n    return response.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nconst fetchMoviesById = async movieId => {\n  try {\n    const response = await axios.get(\n      `https://api.themoviedb.org/3/movie/${movieId}?api_key=${key}`\n    );\n    if (!response) {\n      throw new Error(\"Sorry, something wrong's happened\");\n    }\n    return response.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\n// fetchCast\nconst fetchCast = async id => {\n  try {\n    const response = await axios.get(\n      `https://api.themoviedb.org/3/movie/${id}/credits?api_key=${key}&language=en-US`\n    );\n    if (!response) {\n      throw new Error(\"Sorry, something wrong's happened\");\n    }\n    return response.data.cast;\n  } catch (error) {\n    console.error(error);\n  }\n};\n\n// fetchReview\nconst fetchReview = async id => {\n  try {\n    const response = await axios.get(\n      `https://api.themoviedb.org/3/movie/${id}/reviews?api_key=${key}&language=en-US&page=1`\n    );\n    if (!response) {\n      throw new Error(\"Sorry, something wrong's happened\");\n    }\n    return response.data.results;\n  } catch (error) {\n    console.error(error);\n  }\n};\n\nconst api = {\n  fetchHomepageMovies,\n  fetchMoviesById,\n  fetchMoviesByName,\n  fetchReview,\n  fetchCast,\n};\n\nexport default api;\n"],"names":["Movies","styled","MoviesItem","MovieCard","MovieInfo","MainInfo","AddInfo","AddList","ReviewList","StyledLink","Link","BackLink","to","children","size","useState","movie","setMovie","error","setError","movieId","useParams","location","useLocation","useEffect","api","Number","getMoviesById","vote","id","name","poster_path","title","overview","genres","release_date","vote_average","backLinkHref","state","from","src","alt","date","parsedDate","Date","parse","getFullYear","FormatDateRelease","Math","round","map","genre","Suspense","fallback","key","fetchHomepageMovies","axios","response","Error","data","results","console","log","fetchMoviesByName","query","page","fetchMoviesById","fetchCast","cast","fetchReview"],"sourceRoot":""}